server.port=8082
## Database Properties
spring.datasource.url = jdbc:postgresql://localhost/test?sslmode=disable
spring.datasource.username = postgres
spring.datasource.password = postgres


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
# spring.jpa.properties.hibernate.session_factory.statement_inspector =
spring.jpa.show-sql = true
spring.jpa.generate-ddl=true
spring.jackson.default-property-inclusion = NON_NULL

spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=https://demo.plainid.cloud/auth/realms/demo/protocol/openid-connect/token/introspect
spring.security.oauth2.resourceserver.opaquetoken.client-id=spring
spring.security.oauth2.resourceserver.opaquetoken.client-secret=xlN2CykPxym4IVeWXSeENs8k6sf321KR


plainid.sqlpdp.pdpUrl=http://localhost:8087/resql
plainid.sqlpdp.clientID=PZWLHTZ4SP1QAJECAICW
plainid.sqlpdp.clientSecret=oVaAwsSTFMG91RmPKAQqHxwPMU0nyTpBLXotumtg
plainid.sqlpdp.emptyCLSTreatAsPermitted=false
plainid.sqlpdp.ignoreRuntimeCLSResponse=true
plainid.sqlpdp.ignoreSqlPdpServiceErrors=true
plainid.sqlpdp.oppositeColumnFilteringBehavior=false
plainid.sqlpdp.expandStarColumn=false
plainid.sqlpdp.policiesJoinOperation=OR
plainid.sqlpdp.runtimeCLSAsMasked=true
plainid.sqlpdp.enabled=true
plainid.sqlpdp.jwtPassthrough: true
plainid.sqlpdp.entityid=$.prefered_username
plainid.sqlpdp.requestMapping={ "env.MY_ENV_VAR": "entityAttributes.myEnvVar", "headers.x-user-info.$.user.department": "contextData.userInfo","headers.Accept-Encoding": "entityAttributes.Accept-Encoding-Target","qs.difficulty": "environment.difficulty","url./api/([^/]+)(/|$)": "environment.urlPartExample" }
logging.level.com.plainid = TRACE


